import{r as x,g as V,R as j}from"./index-DYqquK06.js";var O={VITE_BASE_URL_HUB:"https://localhost:7197/api/hub/notifications",VITE_BASE_URL_API:"https://localhost:7197/api/V1/",VITE_BASE_URL_SIGNALS:"https://localhost:7197/api/v1/notification/",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const _=t=>{let e;const n=new Set,o=(i,d)=>{const c=typeof i=="function"?i(e):i;if(!Object.is(c,e)){const u=e;e=d??(typeof c!="object"||c===null)?c:Object.assign({},e,c),n.forEach(a=>a(e,u))}},r=()=>e,S={setState:o,getState:r,getInitialState:()=>E,subscribe:i=>(n.add(i),()=>n.delete(i)),destroy:()=>{(O?"production":void 0)!=="production"&&console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),n.clear()}},E=e=t(o,r,S);return S},T=t=>t?_(t):_;var A={exports:{}},b={},w={exports:{}},L={};/**
 * @license React
 * use-sync-external-store-shim.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var f=x;function B(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var U=typeof Object.is=="function"?Object.is:B,P=f.useState,$=f.useEffect,M=f.useLayoutEffect,N=f.useDebugValue;function G(t,e){var n=e(),o=P({inst:{value:n,getSnapshot:e}}),r=o[0].inst,s=o[1];return M(function(){r.value=n,r.getSnapshot=e,h(r)&&s({inst:r})},[t,n,e]),$(function(){return h(r)&&s({inst:r}),t(function(){h(r)&&s({inst:r})})},[t]),N(n),n}function h(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!U(t,n)}catch{return!0}}function W(t,e){return e()}var q=typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"?W:G;L.useSyncExternalStore=f.useSyncExternalStore!==void 0?f.useSyncExternalStore:q;w.exports=L;var C=w.exports;/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var v=x,z=C;function F(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var k=typeof Object.is=="function"?Object.is:F,H=z.useSyncExternalStore,J=v.useRef,K=v.useEffect,Q=v.useMemo,X=v.useDebugValue;b.useSyncExternalStoreWithSelector=function(t,e,n,o,r){var s=J(null);if(s.current===null){var l={hasValue:!1,value:null};s.current=l}else l=s.current;s=Q(function(){function S(u){if(!E){if(E=!0,i=u,u=o(u),r!==void 0&&l.hasValue){var a=l.value;if(r(a,u))return d=a}return d=u}if(a=d,k(i,u))return a;var y=o(u);return r!==void 0&&r(a,y)?a:(i=u,d=y)}var E=!1,i,d,c=n===void 0?null:n;return[function(){return S(e())},c===null?void 0:function(){return S(c())}]},[e,n,o,r]);var p=H(t,s[0],s[1]);return K(function(){l.hasValue=!0,l.value=p},[p]),X(p),p};A.exports=b;var Y=A.exports;const Z=V(Y);var R={VITE_BASE_URL_HUB:"https://localhost:7197/api/hub/notifications",VITE_BASE_URL_API:"https://localhost:7197/api/V1/",VITE_BASE_URL_SIGNALS:"https://localhost:7197/api/v1/notification/",BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const{useDebugValue:tt}=j,{useSyncExternalStoreWithSelector:et}=Z;let g=!1;const nt=t=>t;function ot(t,e=nt,n){(R?"production":void 0)!=="production"&&n&&!g&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),g=!0);const o=et(t.subscribe,t.getState,t.getServerState||t.getInitialState,e,n);return tt(o),o}const m=t=>{(R?"production":void 0)!=="production"&&typeof t!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const e=typeof t=="function"?T(t):t,n=(o,r)=>ot(e,o,r);return Object.assign(n,e),n},D=t=>t?m(t):m,I=t=>rt[t],rt={1:"success",2:"error",3:"warning",4:"info"},it=D()(t=>({page:1,newPage:e=>t({page:e}),notificationList:[],setNotificationAll:e=>{const n=e.map(o=>({date:o.date,group:o.group,sendMessage:o.sendMessage,userId:o.userId,userName:o.userId,type:I(o.type)}));t(o=>({notificationList:[...o.notificationList,...n]}))},setNotificationOne:e=>{const n={date:e.date,group:e.group,sendMessage:e.sendMessage,userId:e.userId,userName:e.userId,type:I(e.type)};t(o=>({notificationList:[n,...o.notificationList]}))}})),ut=D()(t=>({joinGroup:"",setJoinGroup:e=>t({joinGroup:e})}));export{ut as a,it as u};
